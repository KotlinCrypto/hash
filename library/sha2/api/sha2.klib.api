// Klib ABI Dump
// Targets: [androidNativeArm32, androidNativeArm64, androidNativeX64, androidNativeX86, iosArm64, iosSimulatorArm64, iosX64, js, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, wasmWasi, watchosArm32, watchosArm64, watchosDeviceArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <org.kotlincrypto.hash:sha2>
final class org.kotlincrypto.hash.sha2/SHA224 : org.kotlincrypto.hash.sha2/Bit32Digest { // org.kotlincrypto.hash.sha2/SHA224|null[0]
    constructor <init>() // org.kotlincrypto.hash.sha2/SHA224.<init>|<init>(){}[0]

    final fun copy(): org.kotlincrypto.hash.sha2/SHA224 // org.kotlincrypto.hash.sha2/SHA224.copy|copy(){}[0]
}

final class org.kotlincrypto.hash.sha2/SHA256 : org.kotlincrypto.hash.sha2/Bit32Digest { // org.kotlincrypto.hash.sha2/SHA256|null[0]
    constructor <init>() // org.kotlincrypto.hash.sha2/SHA256.<init>|<init>(){}[0]

    final fun copy(): org.kotlincrypto.hash.sha2/SHA256 // org.kotlincrypto.hash.sha2/SHA256.copy|copy(){}[0]
}

final class org.kotlincrypto.hash.sha2/SHA384 : org.kotlincrypto.hash.sha2/Bit64Digest { // org.kotlincrypto.hash.sha2/SHA384|null[0]
    constructor <init>() // org.kotlincrypto.hash.sha2/SHA384.<init>|<init>(){}[0]

    final fun copy(): org.kotlincrypto.hash.sha2/SHA384 // org.kotlincrypto.hash.sha2/SHA384.copy|copy(){}[0]
}

final class org.kotlincrypto.hash.sha2/SHA512 : org.kotlincrypto.hash.sha2/Bit64Digest { // org.kotlincrypto.hash.sha2/SHA512|null[0]
    constructor <init>() // org.kotlincrypto.hash.sha2/SHA512.<init>|<init>(){}[0]

    final fun copy(): org.kotlincrypto.hash.sha2/SHA512 // org.kotlincrypto.hash.sha2/SHA512.copy|copy(){}[0]
}

final class org.kotlincrypto.hash.sha2/SHA512t : org.kotlincrypto.hash.sha2/Bit64Digest { // org.kotlincrypto.hash.sha2/SHA512t|null[0]
    constructor <init>(kotlin/Int) // org.kotlincrypto.hash.sha2/SHA512t.<init>|<init>(kotlin.Int){}[0]

    final fun copy(): org.kotlincrypto.hash.sha2/SHA512t // org.kotlincrypto.hash.sha2/SHA512t.copy|copy(){}[0]
}

sealed class org.kotlincrypto.hash.sha2/Bit32Digest : org.kotlincrypto.core.digest/Digest { // org.kotlincrypto.hash.sha2/Bit32Digest|null[0]
    constructor <init>(kotlin/Int, kotlin/IntArray) // org.kotlincrypto.hash.sha2/Bit32Digest.<init>|<init>(kotlin.Int;kotlin.IntArray){}[0]
    constructor <init>(org.kotlincrypto.hash.sha2/Bit32Digest) // org.kotlincrypto.hash.sha2/Bit32Digest.<init>|<init>(org.kotlincrypto.hash.sha2.Bit32Digest){}[0]

    abstract fun copy(): org.kotlincrypto.hash.sha2/Bit32Digest // org.kotlincrypto.hash.sha2/Bit32Digest.copy|copy(){}[0]
    final fun compressProtected(kotlin/ByteArray, kotlin/Int) // org.kotlincrypto.hash.sha2/Bit32Digest.compressProtected|compressProtected(kotlin.ByteArray;kotlin.Int){}[0]
    final fun digestIntoProtected(kotlin/ByteArray, kotlin/Int, kotlin/ByteArray, kotlin/Int) // org.kotlincrypto.hash.sha2/Bit32Digest.digestIntoProtected|digestIntoProtected(kotlin.ByteArray;kotlin.Int;kotlin.ByteArray;kotlin.Int){}[0]
    final fun digestProtected(kotlin/ByteArray, kotlin/Int): kotlin/ByteArray // org.kotlincrypto.hash.sha2/Bit32Digest.digestProtected|digestProtected(kotlin.ByteArray;kotlin.Int){}[0]
    final fun resetProtected() // org.kotlincrypto.hash.sha2/Bit32Digest.resetProtected|resetProtected(){}[0]
}

sealed class org.kotlincrypto.hash.sha2/Bit64Digest : org.kotlincrypto.core.digest/Digest { // org.kotlincrypto.hash.sha2/Bit64Digest|null[0]
    constructor <init>(kotlin/Int, kotlin/Int?, kotlin/LongArray) // org.kotlincrypto.hash.sha2/Bit64Digest.<init>|<init>(kotlin.Int;kotlin.Int?;kotlin.LongArray){}[0]
    constructor <init>(org.kotlincrypto.hash.sha2/Bit64Digest) // org.kotlincrypto.hash.sha2/Bit64Digest.<init>|<init>(org.kotlincrypto.hash.sha2.Bit64Digest){}[0]

    abstract fun copy(): org.kotlincrypto.hash.sha2/Bit64Digest // org.kotlincrypto.hash.sha2/Bit64Digest.copy|copy(){}[0]
    final fun compressProtected(kotlin/ByteArray, kotlin/Int) // org.kotlincrypto.hash.sha2/Bit64Digest.compressProtected|compressProtected(kotlin.ByteArray;kotlin.Int){}[0]
    final fun digestIntoProtected(kotlin/ByteArray, kotlin/Int, kotlin/ByteArray, kotlin/Int) // org.kotlincrypto.hash.sha2/Bit64Digest.digestIntoProtected|digestIntoProtected(kotlin.ByteArray;kotlin.Int;kotlin.ByteArray;kotlin.Int){}[0]
    final fun digestProtected(kotlin/ByteArray, kotlin/Int): kotlin/ByteArray // org.kotlincrypto.hash.sha2/Bit64Digest.digestProtected|digestProtected(kotlin.ByteArray;kotlin.Int){}[0]
    final fun resetProtected() // org.kotlincrypto.hash.sha2/Bit64Digest.resetProtected|resetProtected(){}[0]
}

final fun org.kotlincrypto.hash.sha2/SHA512_224(): org.kotlincrypto.hash.sha2/SHA512t // org.kotlincrypto.hash.sha2/SHA512_224|SHA512_224(){}[0]
final fun org.kotlincrypto.hash.sha2/SHA512_256(): org.kotlincrypto.hash.sha2/SHA512t // org.kotlincrypto.hash.sha2/SHA512_256|SHA512_256(){}[0]
